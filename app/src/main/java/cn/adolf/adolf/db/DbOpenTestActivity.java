package cn.adolf.adolf.db;

import android.database.Cursor;
import android.database.DatabaseUtils;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.widget.Button;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import cn.adolf.adolf.R;

public class DbOpenTestActivity extends AppCompatActivity {
    private static final String TAG = "DbOpenTestActivity";
    @BindView(R.id.openDb)
    Button mOpenDb;
    @BindView(R.id.versionInfo)
    TextView mVersionInfo;
    private SQLiteDatabase mDb;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_db_open_test);
        ButterKnife.bind(this);

    }

    @OnClick(R.id.openDb)
    public void onViewClicked() {
        String s = Environment.getExternalStorageDirectory() + "/Adolf";
        mDb = openOrCreateDatabase(s + "/hanzi_data_3035.db", MODE_PRIVATE, null);

        mDb = SQLiteDatabase.openDatabase(s + "/hanzi_data_3035.db", null,
                SQLiteDatabase.OPEN_READWRITE| SQLiteDatabase.NO_LOCALIZED_COLLATORS);

        mDb.disableWriteAheadLogging();
        String s1 = DatabaseUtils.stringForQuery(mDb, "PRAGMA journal_mode=" + "DELETE", null);

        // mDb.rawQuery("PRAGMA journal_mode=DELETE", null);

        // if (!s1.equalsIgnoreCase("DELETE")) {
        //     Log.e(TAG, "setting journal_mode to DELETE failed for db: "
        //             + mDb.getPath()
        //             + " (on pragma set journal_mode, sqlite returned:"
        //             + s);
        // }



        Cursor cursor = mDb.rawQuery("SELECT CONFIGVALUE FROM HanziConfig WHERE CONFIGNAME = 'dataVersions'", null);
        for (cursor.moveToFirst(); !cursor.isAfterLast(); cursor.moveToNext()) {
            int configvalue = cursor.getInt(cursor.getColumnIndex("CONFIGVALUE"));
            Log.d(TAG, "configvalue: " + configvalue);
            mVersionInfo.setText(configvalue + "");
        }
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        mDb.close();
    }
}